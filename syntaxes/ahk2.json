{
    "directives": [
        {
            "body": "#ClipboardTimeout ",
            "description": "Change the time the script continues to try to access the clipboard when the first attempt to access the clipboard fails.",
            "prefix": "#ClipboardTimeout"
        },
        {
            "body": "#DllLoad ",
            "description": "Load the DLL or EXE file before the script starts executing.",
            "prefix": "#DllLoad"
        },
        {
            "body": "#ErrorStdOut ${1|'UTF-8','CP0'|}",
            "description": "Send any syntax errors that prevent the script from running to stderr instead of displaying a dialog box.",
            "prefix": "#ErrorStdOut"
        },
        {
            "body": "#HotIf",
            "description": "Create context-sensitive hotkeys and hotstrings. Such hotkeys will perform different operations (or do nothing) based on the result of the expression.",
            "prefix": "#HotIf"
        },
        {
            "body": "#HotIfTimeout ",
            "description": "Set the maximum time that can be used to calculate a single #HotIf expression.",
            "prefix": "#HotIfTimeout"
        },
        {
            "body": "#Hotstring ${1|NoMouse,EndChars |}",
            "description": "Change the option or terminator of the hot string.",
            "prefix": "#Hotstring"
        },
        {
            "body": "#Include ",
            "description": "Make the script behave as if the content of the specified file is located at this exact location.",
            "prefix": "#Include"
        },
        {
            "body": "#IncludeAgain ",
            "description": "Make the script behave as if the content of the specified file is located at this exact location.",
            "prefix": "#IncludeAgain"
        },
        {
            "body": "#InputLevel ",
            "description": "Controls whether hotkeys and hotstrings ignore simulated keyboard and mouse events.",
            "prefix": "#InputLevel"
        },
        {
            "body": "#MaxThreads ",
            "description": "Set the maximum number of threads that can exist simultaneously.",
            "prefix": "#MaxThreads"
        },
        {
            "body": "#MaxThreadsBuffer",
            "description": "When some or all hotkeys reach the #MaxThreadsPerHotkey limit, this instruction makes them buffer instead of ignoring keystrokes.",
            "prefix": "#MaxThreadsBuffer"
        },
        {
            "body": "#MaxThreadsPerHotkey ",
            "description": "Set the maximum number of threads that can exist simultaneously for each hotkey or hotstring.",
            "prefix": "#MaxThreadsPerHotkey"
        },
        {
            "body": "#NoTrayIcon",
            "description": "Suppresses the display of tray icons.",
            "prefix": "#NoTrayIcon"
        },
        {
            "body": "#Requires ",
            "description": "If the version requirements are not met, display an error and exit.",
            "prefix": "#Requires"
        },
        {
            "body": "#SingleInstance ${1|Force,Ignore,Prompt,Off|}",
            "description": "Determine whether the script is allowed to run again when it is already running.",
            "prefix": "#SingleInstance"
        },
        {
            "body": "#SuspendExempt ${1|true,false|}",
            "description": "Exempt subsequent hotkeys and hotkey strings from being suspended.",
            "prefix": "#SuspendExempt"
        },
        {
            "body": "#UseHook ${1|true,false|}",
            "description": "Force the use of hooks to implement all or part of the keyboard hotkeys.",
            "prefix": "#UseHook"
        },
        {
            "body": "#Warn ${1|All,UseUnsetLocal,UseUnsetGlobal,VarUnset,LocalSameAsGlobal,Unreachable|}, ${2|MsgBox,StdOut,OutputDebug,Off|}",
            "description": "Enable or disable warnings under certain conditions, which may cause errors, such as typos or missing'global' declarations.",
            "prefix": "#Warn"
        },
        {
            "body": "#WinActivateForce",
            "description": "Skip the gentle method and directly use the mandatory method to activate the window.",
            "prefix": "#WinActivateForce"
        },
        {
            "body": ";@Ahk2Exe-${1|IgnoreBegin,IgnoreEnd|}",
            "description": "You can delete code fragments from compiled scripts by wrapping them in instructions.",
            "prefix": "_Ignore"
        },
        {
            "body": "/*@Ahk2Exe-Keep\n$0\n*/",
            "description": "Marked code snippets are only executed in the compiled script.",
            "prefix": "_Keep"
        },
        {
            "body": ";@Ahk2Exe-AddResource ${1:FileName [, ResourceName]}",
            "description": "Add resources to the compiled executable file.",
            "prefix": "_AddResource"
        },
        {
            "body": ";@Ahk2Exe-Base ${1:[Path\\]Name [, [Exe_path\\][Name], Codepage]}",
            "description": "Specify the binary version of AutoHotkey to be included in the generated .exe file.",
            "prefix": "_Base"
        },
        {
            "body": ";@Ahk2Exe-ConsoleApp",
            "description": "Change the executable subsystem to console mode.",
            "prefix": "_ConsoleApp"
        },
        {
            "body": ";@Ahk2Exe-Cont ${1:Text}",
            "description": "Specify a continuation line for the previous instruction. This allows a long line of instructions to be formatted for easy reading in the source code.",
            "prefix": "_Cont"
        },
        {
            "body": ";@Ahk2Exe-Debug ${1:Text}",
            "description": "Display msgbox with supporting text for debugging.",
            "prefix": "_Debug"
        },
        {
            "body": ";@Ahk2Exe-ExeName ${1:[Path\\][Name]}",
            "description": "Specify the location and name of the generated .exe file.",
            "prefix": "_ExeName"
        },
        {
            "body": ";@Ahk2Exe-Let ${1:Name = Value [, Name = Value, ...]}",
            "description": "Create (or modify) one or more user variables, these variables can be accessed through %U_Name%, similar to built-in variables (see above).",
            "prefix": "_Let"
        },
        {
            "body": ";@Ahk2Exe-Obey ${1:Name}, ${2:CmdOrExp [, Extra]}",
            "description": "Execute a command or expression independent of AutoHotkey, and the result is U_Name.",
            "prefix": "_Obey"
        },
        {
            "body": ";@Ahk2Exe-PostExec ${1:Program [parameters] [, When]}",
            "description": "Specify the program to be executed before (or after) any compression program applied to the .exe file after successful compilation.",
            "prefix": "_PostExec"
        },
        {
            "body": ";@Ahk2Exe-Set${1|CompanyName,Copyright,Description,FileVersion,InternalName,Language,LegalTrademarks,Name,OrigFilename,ProductName,ProductVersion,Version|} ${2:Value}",
            "description": "Change the attributes in the version information of the compiled executable file. Note that regardless of the order in which the attributes are specified, all attributes are processed in alphabetical order.",
            "prefix": "_Set"
        },
        {
            "body": ";@Ahk2Exe-SetMainIcon ${1:[IcoFile]}",
            "description": "Overwrite the custom EXE icon used for compilation.",
            "prefix": "_SetMainIcon"
        }
    ],
    "keywords": [
        {
            "body": "and",
            "prefix": "and"
        },
        {
            "body": "as",
            "prefix": "as"
        },
        {
            "body": "in",
            "prefix": "in"
        },
        {
            "body": "is",
            "description": "If Value is an instance of Class, it returns true (1), otherwise it returns false (0).",
            "prefix": "is"
        },
        {
            "body": "not",
            "prefix": "not"
        },
        {
            "body": "or",
            "prefix": "or"
        },
        {
            "body": "break",
            "description": "Exit (terminate) any type of loop statement.",
            "prefix": "break"
        },
        {
            "body": "catch",
            "description": "Specify the code to be executed when an exception is raised during the execution of the try statement.",
            "prefix": "catch"
        },
        {
            "body": "continue",
            "description": "Skip the rest of the current iteration of the loop statement, and then start a new loop.",
            "prefix": "continue"
        },
        {
            "body": "else if ",
            "prefix": "elif"
        },
        {
            "body": "else",
            "description": "If the result of the if statement is false, specify one or more statements to be executed.",
            "prefix": "else"
        },
        {
            "body": "finally",
            "description": "Ensure that one or more statements (functions or expressions) are always executed after the try statement is executed.",
            "prefix": "finally"
        },
        {
            "body": "for $1 in $0",
            "description": "Repeat a series of functions for each key-value pair in the object.",
            "prefix": "for"
        },
        {
            "body": "global",
            "description": "To refer to an existing global variable inside a function (or create a new global variable), please declare it as a global variable before using the variable.",
            "prefix": "global"
        },
        {
            "body": "goto",
            "description": "Jump to the specified label and continue execution.",
            "prefix": "goto"
        },
        {
            "body": "if ",
            "description": "Specify one or more statements to be executed when the expression evaluates to true.",
            "prefix": "if"
        },
        {
            "body": "loop files ${1:FilePattern [, Mode]}",
            "description": "Retrieve the specified file or folder, one at a time.",
            "prefix": "loop files"
        },
        {
            "body": "loop parse ${1:String [, Delimiters|CSV, OmitChars]}",
            "description": "Retrieve one substring (field) from a string at a time.",
            "prefix": "loop parse"
        },
        {
            "body": "loop read ${1:InputFile [, OutputFile]}",
            "description": "Retrieve the lines in the text file, one line at a time.",
            "prefix": "loop read"
        },
        {
            "body": "loop reg ${1:KeyName [, Mode]}",
            "description": "Retrieve the contents of the specified registry subkey, one item at a time.",
            "prefix": "loop reg"
        },
        {
            "body": "loop ",
            "description": "Repeat a series of functions: you can specify a number representing the number of repetitions or until a break is encountered.",
            "prefix": "loop"
        },
        {
            "body": "local",
            "description": "Local variables are specific to a single function and are only visible inside that function. Therefore, local variables may have the same name as global variables, and the two will have separate contents. Separate functions can also be used safely The same variable name.",
            "prefix": "local"
        },
        {
            "body": "case $0:",
            "prefix": "case"
        },
        {
            "body": "default:",
            "prefix": "default"
        },
        {
            "body": "return",
            "description": "Return from the previously executed subroutine through function call, hotkey activation or other means.",
            "prefix": "return"
        },
        {
            "body": "static",
            "description": "Static variables are always implicit local variables, but they are different from local variables because their values ??are remembered between calls.",
            "prefix": "static"
        },
        {
            "body": "throw ",
            "description": "Indicates that an error occurred. The signal can be caught by a try-catch statement.",
            "prefix": "throw"
        },
        {
            "body": "try",
            "description": "Protect one or more statements (functions or expressions) to prevent runtime errors and exceptions raised by the throw statement.",
            "prefix": "try"
        },
        {
            "body": "until ",
            "description": "Apply the condition to the continuation of the loop or for loop.",
            "prefix": "until"
        },
        {
            "body": "while ",
            "description": "Repeat a series of functions until the specified expression evaluates to false.",
            "prefix": "while"
        }
    ],
    "variables": [
        {
            "body": "A_AhkPath",
            "description": "For uncompiled scripts: the full path and name of the EXE file that actually runs the current script.\nFor compiled scripts: except for obtaining the AutoHotkey directory through the registry entry HKLM\\SOFTWARE\\AutoHotkey\\InstallDir.",
            "prefix": "A_AhkPath"
        },
        {
            "body": "A_AhkVersion",
            "description": "Contains the version number of the AutoHotkey main program running the current script, for example 1.0.22.\nIn the compiled script, it contains the version number of the main program used in the original compilation.",
            "prefix": "A_AhkVersion"
        },
        {
            "body": "A_AllowMainWindow",
            "description": "It can be used to get or set whether to allow the main window of the script to be opened through the tray icon.\nFor compiled scripts, this variable defaults to 0, but it can be overridden by assigning a value to this variable. Set it to 1 will activate the items under the View menu of the main window (such as'Lines most recently executed'), which allows you to view the source code and other information of the script.\nIf the script is not compiled, then the value of this variable is always 1. Its attempts to make changes will be ignored.",
            "prefix": "A_AllowMainWindow"
        },
        {
            "body": "A_AppData",
            "description": "The full path and name of the current user's application data folder. For example:\nC:\\Users\\<UserName>\\AppData\\Roaming",
            "prefix": "A_AppData"
        },
        {
            "body": "A_AppDataCommon",
            "description": "The full path and name of the application data folder for all users. For example:\nC:\\ProgramData",
            "prefix": "A_AppDataCommon"
        },
        {
            "body": "A_Args",
            "description": "Contains an array of command line parameters.",
            "prefix": "A_Args"
        },
        {
            "body": "A_Clipboard",
            "description": "Can be used to get or set the contents of the system clipboard.",
            "prefix": "A_Clipboard"
        },
        {
            "body": "A_ComSpec",
            "description": "Contains the same string as the ComSpec variable of the environment. For example: \nC:\\Windows\\system32\\cmd.exe",
            "prefix": "A_ComSpec"
        },
        {
            "body": "A_ComputerName",
            "description": "The computer name seen on the network.",
            "prefix": "A_ComputerName"
        },
        {
            "body": "A_ControlDelay",
            "description": "It can be used to get or set the delay of the control modification function, in milliseconds.",
            "prefix": "A_ControlDelay"
        },
        {
            "body": "A_CoordModeCaret",
            "description": "The area that can be used to get or set relative coordinates. Possible values ??are Window, Client or Screen.",
            "prefix": "A_CoordModeCaret"
        },
        {
            "body": "A_CoordModeMenu",
            "description": "The area that can be used to get or set relative coordinates. Possible values ??are Window, Client or Screen.",
            "prefix": "A_CoordModeMenu"
        },
        {
            "body": "A_CoordModeMouse",
            "description": "The area that can be used to get or set relative coordinates. Possible values ??are Window, Client or Screen.",
            "prefix": "A_CoordModeMouse"
        },
        {
            "body": "A_CoordModePixel",
            "description": "The area that can be used to get or set relative coordinates. Possible values ??are Window, Client or Screen.",
            "prefix": "A_CoordModePixel"
        },
        {
            "body": "A_CoordModeToolTip",
            "description": "The area that can be used to get or set relative coordinates. Possible values ??are Window, Client or Screen.",
            "prefix": "A_CoordModeToolTip"
        },
        {
            "body": "A_Cursor",
            "description": "The currently displayed mouse cursor type. Its value is one of the following words:\nAppStarting (program start, background running--arrow+wait)\nArrow(arrow, normal selection--standard cursor)\nCross( Cross, precise selection)\nHelp(Help, help selection--arrow+question mark)\nIBeam(I-cursor, text selection--input)\nIcon\nNo(No, not available--circle plus backslash)\nSize , SizeAll (all sizes, move-four-way arrow)\nSizeNESW (southeast and northwest size, diagonal adjustment 2-double arrows point to southeast and northwest)\nSizeNS (north-south size, vertical adjustment-double arrows point to north and south )\nSizeNWSE (the size of northwest and southeast, adjust 1 along the diagonal-double arrows point to northwest and southeast)\nSizeWE (size of east and west, adjust horizontally-double arrows point to east)\nUpArrow (up arrow, candidates-point up Arrow)\nWait(Waiting, busy--hourglass or circle)\nUnknown. The hand pointer (click and grab) belongs to the Unknown category.",
            "prefix": "A_Cursor"
        },
        {
            "body": "A_DD",
            "description": "The day of the current month represented by 2 digits (01-31). It has the same meaning as A_MDay.",
            "prefix": "A_DD"
        },
        {
            "body": "A_DDD",
            "description": "The abbreviation of the current day of the week in the language of the current user, such as Sun",
            "prefix": "A_DDD"
        },
        {
            "body": "A_DDDD",
            "description": "Use the full name of the current day of the week in the current user's language, for example, Sunday",
            "prefix": "A_DDDD"
        },
        {
            "body": "A_DefaultMouseSpeed",
            "description": "Can be used to get or set the default mouse speed, an integer from 0 (fastest) to 100 (slowest).",
            "prefix": "A_DefaultMouseSpeed"
        },
        {
            "body": "A_Desktop",
            "description": "The full path and name of the desktop folder of the current user. For example:\nC:\\Users\\<UserName>\\Desktop",
            "prefix": "A_Desktop"
        },
        {
            "body": "A_DesktopCommon",
            "description": "The full path and name of the desktop folder of all users. For example:\nC:\\Users\\Public\\Desktop",
            "prefix": "A_DesktopCommon"
        },
        {
            "body": "A_DetectHiddenText",
            "description": "Can be used to get or set whether to detect hidden text in the window.",
            "prefix": "A_DetectHiddenText"
        },
        {
            "body": "A_DetectHiddenWindows",
            "description": "Can be used to get or set whether to detect hidden windows.",
            "prefix": "A_DetectHiddenWindows"
        },
        {
            "body": "A_EndChar",
            "description": "The user recently pressed the termination character that triggered the non-auto-replacement hotstring.",
            "prefix": "A_EndChar"
        },
        {
            "body": "A_EventInfo",
            "description": "Each thread retains its own A_EventInfo value. It contains additional information about the following events:\nMouse wheel hotkey (WheelDown/Up/Left/Right)\nOnMessage\nRegular Expression Callouts",
            "prefix": "A_EventInfo"
        },
        {
            "body": "A_FileEncoding",
            "description": "Can be used to get or set the default encoding of various built-in functions.",
            "prefix": "A_FileEncoding"
        },
        {
            "body": "A_HotkeyModifierTimeout",
            "description": "Defines how long after pressing the hotkey it is assumed that (Alt/Ctrl/Win/Shift) is still pressed.",
            "prefix": "A_HotkeyModifierTimeout"
        },
        {
            "body": "A_HotkeyInterval",
            "description": "The A_MaxHotkeysPerInterval and A_HotkeyInterval variables control the rate of hotkey activation, beyond which a warning dialog will be displayed.",
            "prefix": "A_HotkeyInterval"
        },
        {
            "body": "A_Hour",
            "description": "The current hour (00-23) represented by 2 digits in the 24-hour clock (for example, 17 for 5pm). To get the time in the 12-hour clock with AM/PM prompts, please refer to this example: FormatTime(,'h:mm:ss tt')",
            "prefix": "A_Hour"
        },
        {
            "body": "A_IconFile",
            "description": "If a custom tray icon is specified by TraySetIcon, the value of the variable is the full path and name of the icon file, otherwise it is empty.",
            "prefix": "A_IconFile"
        },
        {
            "body": "A_IconHidden",
            "description": "Can be used to get or set whether to hide the tray icon.",
            "prefix": "A_IconHidden"
        },
        {
            "body": "A_IconNumber",
            "description": "If A_IconFile is empty, the value is empty. Otherwise, its value is the number of the icon in A_IconFile (usually 1).",
            "prefix": "A_IconNumber"
        },
        {
            "body": "A_IconTip",
            "description": "It can be used to get or set the tooltip text of the tray icon, which will be displayed when the mouse hovers over it. If it is empty, the name of the script is used.\nTo create a multi-line tooltip, please click Use a newline character (`n) between each line, such as'Line1`nLine2'. Only the first 127 characters are displayed, and the text is truncated at the first tab (if it exists).",
            "prefix": "A_IconTip"
        },
        {
            "body": "A_Index",
            "description": "Contains the number of current loop iterations, which can be assigned to any integer value by the script.",
            "prefix": "A_Index"
        },
        {
            "body": "A_InitialWorkingDir",
            "description": "The initial working directory of the script, determined by how it was started.",
            "prefix": "A_InitialWorkingDir"
        },
        {
            "body": "A_Is64bitOS",
            "description": "The value is 1 (true) when the operating system is 64-bit, and 0 (false) when it is 32-bit.",
            "prefix": "A_Is64bitOS"
        },
        {
            "body": "A_IsAdmin",
            "description": "If the current user has administrator rights, the value of this variable is 1. Otherwise, it is 0.",
            "prefix": "A_IsAdmin"
        },
        {
            "body": "A_IsCompiled",
            "description": "If the currently running script is a compiled EXE, the value of this variable is 1, otherwise it is an empty string (this will be regarded as false).",
            "prefix": "A_IsCompiled"
        },
        {
            "body": "A_IsCritical",
            "description": "If the Critical of the current thread is closed, the value is 0. Otherwise, the value is an integer greater than zero, which is the message check frequency used by Critical.",
            "prefix": "A_IsCritical"
        },
        {
            "body": "A_IsPaused",
            "description": "If the thread after the current thread is suspended, the value is 1, otherwise it is 0.",
            "prefix": "A_IsPaused"
        },
        {
            "body": "A_IsSuspended",
            "description": "If the script is suspended, the value is 1, otherwise it is 0.",
            "prefix": "A_IsSuspended"
        },
        {
            "body": "A_KeyDelay",
            "description": "It can be used to get or set the delay time of the button, in milliseconds.",
            "prefix": "A_KeyDelay"
        },
        {
            "body": "A_KeyDelayPlay",
            "description": "It can be used to get or set the delay time of keys sent through SendPlay mode, in milliseconds.",
            "prefix": "A_KeyDelayPlay"
        },
        {
            "body": "A_KeyDuration",
            "description": "It can be used to get or set the duration of the button, in milliseconds.",
            "prefix": "A_KeyDuration"
        },
        {
            "body": "A_KeyDurationPlay",
            "description": "It can be used to get or set the duration of the button sent through SendPlay mode, in milliseconds.",
            "prefix": "A_KeyDurationPlay"
        },
        {
            "body": "A_Language",
            "description": "The default language of the current system, the value is one of these 4-digit codes. For example, if the value of A_Language is 0436, the default language of the system is Afrikaans.",
            "prefix": "A_Language"
        },
        {
            "body": "A_LastError",
            "description": "This is usually the result of the system's GetLastError() function after the script calls certain functions (such as DllCall or Run/RunWait), or the HRESULT of the last COM object call.",
            "prefix": "A_LastError"
        },
        {
            "body": "A_LineFile",
            "description": "The full path and name of the file that A_LineNumber belongs to. Unless the current line belongs to a #Include file of an uncompiled script, it will be the same as A_ScriptFullPath.",
            "prefix": "A_LineFile"
        },
        {
            "body": "A_LineNumber",
            "description": "The line number of the line being executed in the script (or its #Include file). This line number is consistent with that displayed by ListLines; it is very useful for error reporting, such as this example: MsgBox'Could not write to log file (line number 'A_LineNumber')'.\nBecause the compiled script has merged all its #Include files into one large script, its line number may be different from when it is run in uncompiled mode.",
            "prefix": "A_LineNumber"
        },
        {
            "body": "A_ListLines",
            "description": "Can be used to get or set whether to record a row.",
            "prefix": "A_ListLines"
        },
        {
            "body": "A_LoopField",
            "description": "Exists in any parsing loop, it contains the contents of the current substring (field).",
            "prefix": "A_LoopField"
        },
        {
            "body": "A_LoopFileAttrib",
            "description": "The attributes of the currently retrieved file.",
            "prefix": "A_LoopFileAttrib"
        },
        {
            "body": "A_LoopFileDir",
            "description": "The path of the directory where A_LoopFileName is located. If FilePattern contains a relative path instead of an absolute path, then the path here will also be a relative path. The root directory will not contain a backslash. For example: C:",
            "prefix": "A_LoopFileDir"
        },
        {
            "body": "A_LoopFileExt",
            "description": "The extension of the file (such as TXT, DOC or EXE). Do not include the period (.).",
            "prefix": "A_LoopFileExt"
        },
        {
            "body": "A_LoopFileFullPath",
            "description": "This is different from A_LoopFilePath as follows: 1) It always contains the absolute/full path of the file, even if the FilePattern contains a relative path; 2) Any short (8.3) folder name in the FilePattern itself will be converted to a long file Name; 3) The characters in the FilePattern will be converted to uppercase or lowercase to match the case stored in the file system. This is for the file name - for example, the file name passed into the script as a command line parameter - is converted to the resource manager The exact path name displayed is useful.",
            "prefix": "A_LoopFileFullPath"
        },
        {
            "body": "A_LoopFileName",
            "description": "The name of the file or folder currently retrieved (not including the path).",
            "prefix": "A_LoopFileName"
        },
        {
            "body": "A_LoopFilePath",
            "description": "The path and name of the file/folder currently retrieved. If FilePattern contains a relative path instead of an absolute path, the path here will also be a relative path.",
            "prefix": "A_LoopFilePath"
        },
        {
            "body": "A_LoopFileShortName",
            "description": "The 8.3 short name of the file, or alternative name. If the file does not have a short file name (because the long file is shorter than 8.3, or perhaps because the NTFS file system disables the generation of short file names), A_LoopFileName will be retrieved.",
            "prefix": "A_LoopFileShortName"
        },
        {
            "body": "A_LoopFileShortPath",
            "description": "The 8.3 short path and name of the currently retrieved file/folder. For example: C:\\MYDOCU~1\\ADDRES~1.txt. If FilePattern contains a relative path instead of an absolute path, the path here will also be Is a relative path.",
            "prefix": "A_LoopFileShortPath"
        },
        {
            "body": "A_LoopFileSize",
            "description": "The size of the currently retrieved file, in KB, rounded down to the nearest integer.",
            "prefix": "A_LoopFileSize"
        },
        {
            "body": "A_LoopFileSizeKB",
            "description": "The size of the currently retrieved file, in KB, rounded down to the nearest integer.",
            "prefix": "A_LoopFileSizeKB"
        },
        {
            "body": "A_LoopFileSizeMB",
            "description": "The size of the currently retrieved file, in Mb, rounded down to the nearest integer.",
            "prefix": "A_LoopFileSizeMB"
        },
        {
            "body": "A_LoopFileTimeAccessed",
            "description": "The last time the file was accessed. The format is YYYYMMDDHH24MISS.",
            "prefix": "A_LoopFileTimeAccessed"
        },
        {
            "body": "A_LoopFileTimeCreated",
            "description": "The time when the file was created. The format is YYYYMMDDHH24MISS.",
            "prefix": "A_LoopFileTimeCreated"
        },
        {
            "body": "A_LoopFileTimeModified",
            "description": "The time when the file was last modified. The format is YYYYMMDDHH24MISS.",
            "prefix": "A_LoopFileTimeModified"
        },
        {
            "body": "A_LoopReadLine",
            "description": "Exists in any file reading loop, it contains the content of the current line, excluding the carriage return and the newline (`r`n) marking the end of the line.",
            "prefix": "A_LoopReadLine"
        },
        {
            "body": "A_LoopRegKey",
            "description": "Contains the full name of the key of the current loop item. For remote registry access, this value will not include the computer name.",
            "prefix": "A_LoopRegKey"
        },
        {
            "body": "A_LoopRegName",
            "description": "The name of the item currently retrieved. It can be a value name or the name of a sub-item.",
            "prefix": "A_LoopRegName"
        },
        {
            "body": "A_LoopRegTimeModified",
            "description": "The time when the current item or any value was last modified. The format is YYYYMMDDHH24MISS.",
            "prefix": "A_LoopRegTimeModified"
        },
        {
            "body": "A_LoopRegType",
            "description": "The type of item currently retrieved.",
            "prefix": "A_LoopRegType"
        },
        {
            "body": "A_MaxHotkeysPerInterval",
            "description": "The A_MaxHotkeysPerInterval and A_HotkeyInterval variables control the rate of hotkey activation, beyond which a warning dialog will be displayed.",
            "prefix": "A_MaxHotkeysPerInterval"
        },
        {
            "body": "A_MDay",
            "description": "The day of the current month represented by 2 digits (01-31).",
            "prefix": "A_MDay"
        },
        {
            "body": "A_MenuMaskKey",
            "description": "Control which key is used to mask Win or Alt key events.",
            "prefix": "A_MenuMaskKey"
        },
        {
            "body": "A_MM",
            "description": "The current month represented by 2 digits (01-12). It has the same meaning as A_Mon.",
            "prefix": "A_MM"
        },
        {
            "body": "A_MMM",
            "description": "The abbreviation of the current month in the language of the current user, such as Jul",
            "prefix": "A_MMM"
        },
        {
            "body": "A_MMMM",
            "description": "The full name of the current month in the language of the current user, for example July",
            "prefix": "A_MMMM"
        },
        {
            "body": "A_MSec",
            "description": "The current three-digit number of milliseconds (000-999).",
            "prefix": "A_MSec"
        },
        {
            "body": "A_Min",
            "description": "The current minute in 2 digits (00-59).",
            "prefix": "A_Min"
        },
        {
            "body": "A_Mon",
            "description": "The current month represented by 2 digits (01-12).",
            "prefix": "A_Mon"
        },
        {
            "body": "A_MouseDelay",
            "description": "Can be used to get or set the mouse delay, in milliseconds.",
            "prefix": "A_MouseDelay"
        },
        {
            "body": "A_MouseDelayPlay",
            "description": "It can be used to get or set the mouse delay of SendPlay, in milliseconds.",
            "prefix": "A_MouseDelayPlay"
        },
        {
            "body": "A_MyDocuments",
            "description": "The full path and name of the current user's'My Documents' folder.",
            "prefix": "A_MyDocuments"
        },
        {
            "body": "A_Now",
            "description": "The current local time in YYYYMMDDHH24MISS format.",
            "prefix": "A_Now"
        },
        {
            "body": "A_NowUTC",
            "description": "The current Coordinated Universal Time (UTC) in YYYYMMDDHH24MISS format. UTC is essentially the same as Greenwich Mean Time (GMT).",
            "prefix": "A_NowUTC"
        },
        {
            "body": "A_OSVersion",
            "description": "The version number of the operating system, in the format of'major.minor.build'. For example, Windows 7 SP1 is 6.1.7601.\nApplying compatibility settings in the properties of the AutoHotkey executable file or compiled script will Cause the system to report a different version number, which will be reflected in A_OSVersion.",
            "prefix": "A_OSVersion"
        },
        {
            "body": "A_PriorHotkey",
            "description": "Except for saving the name of the previous hotkey, everything else is the same as above. It will be empty if there is no one.",
            "prefix": "A_PriorHotkey"
        },
        {
            "body": "A_PriorKey",
            "description": "The name of the last key pressed before the most recent key-press or key-release. If no suitable key is found in the key history-it will be empty. Does not include generated by AutoHotkey script To use this variable, you must first install a keyboard or mouse hook and enable key history.",
            "prefix": "A_PriorKey"
        },
        {
            "body": "A_PriorLine",
            "description": "Includes the source code line immediately before the current compiler directive. Only the blank lines and comments in the middle are ignored, as well as any intermediate compiler directive lines.",
            "prefix": "A_PriorLine"
        },
        {
            "body": "A_ProgramFiles",
            "description": "Program Files directory (e.g. C:\\Program Files or C:\\Program Files (x86)). This is usually the same as the ProgramFiles environment variable.",
            "prefix": "A_ProgramFiles"
        },
        {
            "body": "A_Programs",
            "description": "The full path and name of the program folder in the start menu of the current user. For example:\nC:\\Users\\<UserName>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs",
            "prefix": "A_Programs"
        },
        {
            "body": "A_ProgramsCommon",
            "description": "The full path and name of the program folder in the start menu of all users. For example:\nC:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs",
            "prefix": "A_ProgramsCommon"
        },
        {
            "body": "A_PtrSize",
            "description": "Contains the size value of the pointer, in bytes. The value is 4 (32-bit) or 8 (64-bit), depending on the type of executor running the current script.",
            "prefix": "A_PtrSize"
        },
        {
            "body": "A_RegView",
            "description": "Can be used to get or set the registry view. Possible values ??are 32, 64 and Default.",
            "prefix": "A_RegView"
        },
        {
            "body": "A_ScreenDPI",
            "description": "The number of pixels per logical inch of screen width. In a system with multiple display monitors, this value is the same for all monitors.",
            "prefix": "A_ScreenDPI"
        },
        {
            "body": "A_ScreenHeight",
            "description": "The height of the main monitor, in pixels",
            "prefix": "A_ScreenHeight"
        },
        {
            "body": "A_ScreenWidth",
            "description": "The width of the main monitor, in pixels",
            "prefix": "A_ScreenWidth"
        },
        {
            "body": "A_ScriptDir",
            "description": "The full path of the directory where the current script is located. Does not include the final backslash (the same is true for the root directory).\nIf the script text is read from standard input instead of from a file, variable The value is the initial working directory.",
            "prefix": "A_ScriptDir"
        },
        {
            "body": "A_ScriptFullPath",
            "description": "The full path of the current script, for example C:\\My Documents\\My Script.ahk\nIf the script text is read from standard input instead of from the file, the value is'* '.",
            "prefix": "A_ScriptFullPath"
        },
        {
            "body": "A_ScriptHwnd",
            "description": "The unique ID (HWND/handle) of the script's main window (hidden).",
            "prefix": "A_ScriptHwnd"
        },
        {
            "body": "A_ScriptName",
            "description": "It can be used to get or set the default title of MsgBox, InputBox, FileSelect, DirSelect and Gui.New. If the script is not set, it defaults to the file name of the current script, excluding the path, such as MyScript.ahk.",
            "prefix": "A_ScriptName"
        },
        {
            "body": "A_Sec",
            "description": "The current second in 2 digits (00-59).",
            "prefix": "A_Sec"
        },
        {
            "body": "A_SendLevel",
            "description": "Can be used to get or set the sending level, an integer between 0 and 100, including 0 and 100.",
            "prefix": "A_SendLevel"
        },
        {
            "body": "A_SendMode",
            "description": "Can be used to get or set the sending mode. Possible values ??are Event, Input, Play and InputThenPlay.",
            "prefix": "A_SendMode"
        },
        {
            "body": "A_Space",
            "description": "Contains a single space character.",
            "prefix": "A_Space"
        },
        {
            "body": "A_StartMenu",
            "description": "The full path and name of the start menu folder of the current user. For example:\nC:\\Users\\<UserName>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu",
            "prefix": "A_StartMenu"
        },
        {
            "body": "A_StartMenuCommon",
            "description": "The full path and name of the start menu folder for all users. For example:\nC:\\ProgramData\\Microsoft\\Windows\\Start Menu",
            "prefix": "A_StartMenuCommon"
        },
        {
            "body": "A_Startup",
            "description": "The full path and name of the startup folder in the start menu of the current user. For example:\nC:\\Users\\<UserName>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
            "prefix": "A_Startup"
        },
        {
            "body": "A_StartupCommon",
            "description": "The full path and name of the startup folder in the start menu of all users. For example:\nC:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
            "prefix": "A_StartupCommon"
        },
        {
            "body": "A_StoreCapsLockMode",
            "description": "Can be used to get or set whether to restore the state of CapsLock after Send.",
            "prefix": "A_StoreCapsLockMode"
        },
        {
            "body": "A_StringCaseSense",
            "description": "Retrieve or set case sensitivity settings.",
            "prefix": "A_StringCaseSense"
        },
        {
            "body": "A_Tab",
            "description": "Contains a single tab character.",
            "prefix": "A_Tab"
        },
        {
            "body": "A_Temp",
            "description": "The full path and name of the folder where temporary files are stored. Its value is retrieved from one of the following locations (in order): 1) Environment variable TMP, TEMP or USERPROFILE; 2) Windows directory. For example: \nC:\\Users\\<UserName>\\AppData\\Local\\Temp",
            "prefix": "A_Temp"
        },
        {
            "body": "A_ThisFunc",
            "description": "The name of the custom function currently being executed (empty if none); For example: MyFunction.",
            "prefix": "A_ThisFunc"
        },
        {
            "body": "A_ThisHotkey",
            "description": "The most recently executed hotkey or non-auto-replacement hotstring (empty if there is none), such as #z. If the current thread is interrupted by other hotkeys or hotstrings, then the value of this variable will change, So in general, it is best to use the ThisHotkey parameter.",
            "prefix": "A_ThisHotkey"
        },
        {
            "body": "A_TickCount",
            "description": "The number of milliseconds that have elapsed since the computer was started, up to 49.7 days. By saving A_TickCount to a variable, and after a period of time, subtracting that variable from the latest A_TickCount value, the elapsed time can be calculated.",
            "prefix": "A_TickCount"
        },
        {
            "body": "A_TimeIdle",
            "description": "The number of milliseconds since the last time the system received keyboard, mouse or other input. This can be used to determine whether the user has left. The user's physical input and analog input generated by any program or script (such as Send Or MouseMove function) will reset this variable to zero.",
            "prefix": "A_TimeIdle"
        },
        {
            "body": "A_TimeIdleKeyboard",
            "description": "If the keyboard hook is installed, this is the number of milliseconds that have passed since the system last received physical keyboard input. Otherwise, this variable is equal to A_TimeIdle.",
            "prefix": "A_TimeIdleKeyboard"
        },
        {
            "body": "A_TimeIdleMouse",
            "description": "If the mouse hook is installed, this is the number of milliseconds that have passed since the system last received physical mouse input. Otherwise, this variable is equal to A_TimeIdle.",
            "prefix": "A_TimeIdleMouse"
        },
        {
            "body": "A_TimeIdlePhysical",
            "description": "Similar to the above, but after installing the corresponding hook (keyboard or mouse), the simulated keystrokes and/or mouse clicks will be ignored; that is, this variable only responds to physical events. (This avoids Simulate keystrokes and mouse clicks and mistakenly believe that the user exists.) If both hooks are not installed, this variable is equivalent to A_TimeIdle. If only one hook is installed, then only this type of physical input will work on A_TimeIdlePhysical ( Another input/no hook installed, both physical and simulated, will be ignored).",
            "prefix": "A_TimeIdlePhysical"
        },
        {
            "body": "A_TimeSincePriorHotkey",
            "description": "The number of milliseconds that have elapsed since A_PriorHotkey was pressed. If A_PriorHotkey is empty, the value of this variable is -1.",
            "prefix": "A_TimeSincePriorHotkey"
        },
        {
            "body": "A_TimeSinceThisHotkey",
            "description": "The number of milliseconds that have elapsed since A_ThisHotkey was pressed. If A_ThisHotkey is empty, the value of this variable is -1.",
            "prefix": "A_TimeSinceThisHotkey"
        },
        {
            "body": "A_TitleMatchMode",
            "description": "Can be used to get or set the title matching mode. Possible values ??are 1, 2, 3 and RegEx.",
            "prefix": "A_TitleMatchMode"
        },
        {
            "body": "A_TitleMatchModeSpeed",
            "description": "Can be used to get or set the title matching speed. The possible values ??are fast and slow.",
            "prefix": "A_TitleMatchModeSpeed"
        },
        {
            "body": "A_TrayMenu",
            "description": "Returns the menu object that can be used to modify or display the tray menu.",
            "prefix": "A_TrayMenu"
        },
        {
            "body": "A_UserName",
            "description": "The login name of the user running the current script.",
            "prefix": "A_UserName"
        },
        {
            "body": "A_WDay",
            "description": "One digit represents the elapsed days of the current week (1-7). In all locales, 1 means Sunday.",
            "prefix": "A_WDay"
        },
        {
            "body": "A_WinDelay",
            "description": "Can be used to get or set the delay of the window function, in milliseconds.",
            "prefix": "A_WinDelay"
        },
        {
            "body": "A_WinDir",
            "description": "Windows directory. For example: C:\\Windows",
            "prefix": "A_WinDir"
        },
        {
            "body": "A_WorkFileName",
            "description": "The special variable A_WorkFileName also holds the temporary name of the processed .exe file. This can be used to pass the file name as a parameter to any PostExec command that needs to access the generated .exe file.",
            "prefix": "A_WorkFileName"
        },
        {
            "body": "A_WorkingDir",
            "description": "Can be used to get or set the current working directory of the script, which is the default path for accessing files. Unless it is the root directory, the path does not contain a backslash at the end. Two examples: C:\\ and C:\\My Documents. Use SetWorkingDir or assign a path to A_WorkingDir to change the current working directory.\nNo matter how the script is started, the script's working directory defaults to A_ScriptDir.",
            "prefix": "A_WorkingDir"
        },
        {
            "body": "A_YDay",
            "description": "The number of days elapsed in the current year (1-366). The value of the variable will not be filled with zeros, for example, 9, instead of 009.",
            "prefix": "A_YDay"
        },
        {
            "body": "A_YWeek",
            "description": "The current year and week according to the ISO 8601 standard (e.g. 200453).",
            "prefix": "A_YWeek"
        },
        {
            "body": "A_YYYY",
            "description": "The current year represented by 4 digits (for example, 2004). It has the same meaning as A_Year.",
            "prefix": "A_YYYY"
        },
        {
            "body": "A_Year",
            "description": "The current year represented by 4 digits (e.g. 2004).",
            "prefix": "A_Year"
        },
        {
            "body": "true",
            "description": "Boolean value'true', same as value 1.",
            "prefix": "true"
        },
        {
            "body": "false",
            "description": "Boolean value'false', same as value 0.",
            "prefix": "false"
        },
        {
            "body": "unset",
            "description": "Within a function call, array literal or object literal, the keyword unset can be used to explicitly omit the parameter or value.",
            "prefix": "unset"
        }
    ],
    "texts": [
        {
            "body": "ahk_class",
            "description": "The window class is a set of attributes used by the system as a template for creating windows. In other words, the class name of the window identifies the type of window. To use the window class, please specify ahk_class ExactClassName, as shown in Window Spy .ExactClassName can be retrieved through WinGetClass.",
            "prefix": "ahk_class"
        },
        {
            "body": "ahk_exe",
            "description": "Use ahk_exe to identify windows belonging to any process with a given name or path.",
            "prefix": "ahk_exe"
        },
        {
            "body": "ahk_group",
            "description": "Use ahk_group to identify one or more windows that match the rules contained in the previously defined window group.",
            "prefix": "ahk_group"
        },
        {
            "body": "ahk_id",
            "description": "Each window or control has a unique ID, also known as HWND (short for window handle).",
            "prefix": "ahk_id"
        },
        {
            "body": "ahk_pid",
            "description": "Use ahk_pid to identify the window belonging to a specific process. The process identifier (PID) is usually retrieved by WinGet, Run or Process.",
            "prefix": "ahk_pid"
        },
        {
            "body": "AlwaysOnTop",
            "description": "Keep the window above all other windows.",
            "prefix": "AlwaysOnTop"
        },
        {
            "body": "AutoSize",
            "description": "Resize the window to only accommodate its currently visible controls. This is useful for adjusting the window size after adding new controls or adjusting the size of existing controls, hiding or unhiding them.",
            "prefix": "AutoSize"
        },
        {
            "body": "Border",
            "description": "Provide a thin border around the control. Most controls do not need this because they already have a type-specific border. When adding a border to an existing control, you may need to increase the width and height of the control by 1 Pixels.",
            "prefix": "Border"
        },
        {
            "body": "Caption",
            "description": "Provide title bar and thick window border/edge.",
            "prefix": "Caption"
        },
        {
            "body": "Center",
            "description": "Center the text of the control within its available width.",
            "prefix": "Center"
        },
        {
            "body": "DropFiles",
            "description": "Start when a file/folder is dragged and dropped onto the window as part of a drag-and-drop operation (but if this callback is already running, the drag-and-drop event will be ignored).",
            "prefix": "DropFiles"
        }
    ],
    "keys": [
        {
            "body": "Alt",
            "prefix": "Alt"
        },
        {
            "body": "AltTab",
            "description": "If the alt-tab menu is visible, then move forward in the menu. Otherwise, display the menu (only when the hotkey is two keys connected by'&'; otherwise, it does nothing).",
            "prefix": "AltTab"
        },
        {
            "body": "AltTabAndMenu",
            "description": "If the alt-tab menu is visible, move forward. Otherwise, display the menu.",
            "prefix": "AltTabAndMenu"
        },
        {
            "body": "AltTabMenu",
            "description": "Show or hide the alt-tab menu.",
            "prefix": "AltTabMenu"
        },
        {
            "body": "AltTabMenuDismiss",
            "description": "Close the Alt-tab menu.",
            "prefix": "AltTabMenuDismiss"
        },
        {
            "body": "AppsKey",
            "description": "Menu. This is the key to call the right-click context menu.",
            "prefix": "AppsKey"
        },
        {
            "body": "BackSpace",
            "prefix": "BackSpace"
        },
        {
            "body": "Browser_Back",
            "description": "Back",
            "prefix": "Browser_Back"
        },
        {
            "body": "Browser_Favorites",
            "description": "Favorites",
            "prefix": "Browser_Favorites"
        },
        {
            "body": "Browser_Forward",
            "description": "Forward",
            "prefix": "Browser_Forward"
        },
        {
            "body": "Browser_Home",
            "description": "Homepage",
            "prefix": "Browser_Home"
        },
        {
            "body": "Browser_Refresh",
            "description": "Refresh",
            "prefix": "Browser_Refresh"
        },
        {
            "body": "Browser_Search",
            "description": "Search",
            "prefix": "Browser_Search"
        },
        {
            "body": "Browser_Stop",
            "description": "Stop",
            "prefix": "Browser_Stop"
        },
        {
            "body": "CapsLock",
            "prefix": "CapsLock"
        },
        {
            "body": "Ctrl",
            "prefix": "Ctrl"
        },
        {
            "body": "CtrlBreak",
            "description": "Ctrl+Pause or Ctrl+ScrollLock",
            "prefix": "CtrlBreak"
        },
        {
            "body": "Del",
            "prefix": "Del"
        },
        {
            "body": "Delete",
            "prefix": "Delete"
        },
        {
            "body": "Down",
            "prefix": "Down"
        },
        {
            "body": "End",
            "prefix": "End"
        },
        {
            "body": "Enter",
            "prefix": "Enter"
        },
        {
            "body": "Esc",
            "prefix": "Esc"
        },
        {
            "body": "Escape",
            "prefix": "Escape"
        },
        {
            "body": "F1",
            "prefix": "F1"
        },
        {
            "body": "F10",
            "prefix": "F10"
        },
        {
            "body": "F11",
            "prefix": "F11"
        },
        {
            "body": "F12",
            "prefix": "F12"
        },
        {
            "body": "F13",
            "prefix": "F13"
        },
        {
            "body": "F14",
            "prefix": "F14"
        },
        {
            "body": "F15",
            "prefix": "F15"
        },
        {
            "body": "F16",
            "prefix": "F16"
        },
        {
            "body": "F17",
            "prefix": "F17"
        },
        {
            "body": "F18",
            "prefix": "F18"
        },
        {
            "body": "F19",
            "prefix": "F19"
        },
        {
            "body": "F2",
            "prefix": "F2"
        },
        {
            "body": "F20",
            "prefix": "F20"
        },
        {
            "body": "F21",
            "prefix": "F21"
        },
        {
            "body": "F22",
            "prefix": "F22"
        },
        {
            "body": "F23",
            "prefix": "F23"
        },
        {
            "body": "F24",
            "prefix": "F24"
        },
        {
            "body": "F3",
            "prefix": "F3"
        },
        {
            "body": "F4",
            "prefix": "F4"
        },
        {
            "body": "F5",
            "prefix": "F5"
        },
        {
            "body": "F6",
            "prefix": "F6"
        },
        {
            "body": "F7",
            "prefix": "F7"
        },
        {
            "body": "F8",
            "prefix": "F8"
        },
        {
            "body": "F9",
            "prefix": "F9"
        },
        {
            "body": "Home",
            "prefix": "Home"
        },
        {
            "body": "Ins",
            "prefix": "Ins"
        },
        {
            "body": "Insert",
            "prefix": "Insert"
        },
        {
            "body": "Joy1",
            "prefix": "Joy1"
        },
        {
            "body": "Joy10",
            "prefix": "Joy10"
        },
        {
            "body": "Joy11",
            "prefix": "Joy11"
        },
        {
            "body": "Joy12",
            "prefix": "Joy12"
        },
        {
            "body": "Joy13",
            "prefix": "Joy13"
        },
        {
            "body": "Joy14",
            "prefix": "Joy14"
        },
        {
            "body": "Joy15",
            "prefix": "Joy15"
        },
        {
            "body": "Joy16",
            "prefix": "Joy16"
        },
        {
            "body": "Joy17",
            "prefix": "Joy17"
        },
        {
            "body": "Joy18",
            "prefix": "Joy18"
        },
        {
            "body": "Joy19",
            "prefix": "Joy19"
        },
        {
            "body": "Joy2",
            "prefix": "Joy2"
        },
        {
            "body": "Joy20",
            "prefix": "Joy20"
        },
        {
            "body": "Joy21",
            "prefix": "Joy21"
        },
        {
            "body": "Joy22",
            "prefix": "Joy22"
        },
        {
            "body": "Joy23",
            "prefix": "Joy23"
        },
        {
            "body": "Joy24",
            "prefix": "Joy24"
        },
        {
            "body": "Joy25",
            "prefix": "Joy25"
        },
        {
            "body": "Joy26",
            "prefix": "Joy26"
        },
        {
            "body": "Joy27",
            "prefix": "Joy27"
        },
        {
            "body": "Joy28",
            "prefix": "Joy28"
        },
        {
            "body": "Joy29",
            "prefix": "Joy29"
        },
        {
            "body": "Joy3",
            "prefix": "Joy3"
        },
        {
            "body": "Joy30",
            "prefix": "Joy30"
        },
        {
            "body": "Joy31",
            "prefix": "Joy31"
        },
        {
            "body": "Joy32",
            "prefix": "Joy32"
        },
        {
            "body": "Joy4",
            "prefix": "Joy4"
        },
        {
            "body": "Joy5",
            "prefix": "Joy5"
        },
        {
            "body": "Joy6",
            "prefix": "Joy6"
        },
        {
            "body": "Joy7",
            "prefix": "Joy7"
        },
        {
            "body": "Joy8",
            "prefix": "Joy8"
        },
        {
            "body": "Joy9",
            "prefix": "Joy9"
        },
        {
            "body": "JoyAxes",
            "prefix": "JoyAxes"
        },
        {
            "body": "JoyButtons",
            "prefix": "JoyButtons"
        },
        {
            "body": "JoyInfo",
            "prefix": "JoyInfo"
        },
        {
            "body": "JoyName",
            "prefix": "JoyName"
        },
        {
            "body": "JoyPOV",
            "prefix": "JoyPOV"
        },
        {
            "body": "JoyR",
            "prefix": "JoyR"
        },
        {
            "body": "JoyU",
            "prefix": "JoyU"
        },
        {
            "body": "JoyV",
            "prefix": "JoyV"
        },
        {
            "body": "JoyX",
            "prefix": "JoyX"
        },
        {
            "body": "JoyY",
            "prefix": "JoyY"
        },
        {
            "body": "JoyZ",
            "prefix": "JoyZ"
        },
        {
            "body": "LAlt",
            "prefix": "LAlt"
        },
        {
            "body": "Launch_App1",
            "prefix": "Launch_App1"
        },
        {
            "body": "Launch_App2",
            "prefix": "Launch_App2"
        },
        {
            "body": "Launch_Mail",
            "prefix": "Launch_Mail"
        },
        {
            "body": "Launch_Media",
            "prefix": "Launch_Media"
        },
        {
            "body": "LButton",
            "prefix": "LButton"
        },
        {
            "body": "LControl",
            "prefix": "LControl"
        },
        {
            "body": "LCtrl",
            "prefix": "LCtrl"
        },
        {
            "body": "Left",
            "prefix": "Left"
        },
        {
            "body": "LShift",
            "prefix": "LShift"
        },
        {
            "body": "LWin",
            "prefix": "LWin"
        },
        {
            "body": "MButton",
            "prefix": "MButton"
        },
        {
            "body": "Media_Next",
            "prefix": "Media_Next"
        },
        {
            "body": "Media_Play_Pause",
            "prefix": "Media_Play_Pause"
        },
        {
            "body": "Media_Prev",
            "prefix": "Media_Prev"
        },
        {
            "body": "Media_Stop",
            "prefix": "Media_Stop"
        },
        {
            "body": "NumLock",
            "prefix": "NumLock"
        },
        {
            "body": "Numpad0",
            "prefix": "Numpad0"
        },
        {
            "body": "Numpad1",
            "prefix": "Numpad1"
        },
        {
            "body": "Numpad2",
            "prefix": "Numpad2"
        },
        {
            "body": "Numpad3",
            "prefix": "Numpad3"
        },
        {
            "body": "Numpad4",
            "prefix": "Numpad4"
        },
        {
            "body": "Numpad5",
            "prefix": "Numpad5"
        },
        {
            "body": "Numpad6",
            "prefix": "Numpad6"
        },
        {
            "body": "Numpad7",
            "prefix": "Numpad7"
        },
        {
            "body": "Numpad8",
            "prefix": "Numpad8"
        },
        {
            "body": "Numpad9",
            "prefix": "Numpad9"
        },
        {
            "body": "NumpadAdd",
            "prefix": "NumpadAdd"
        },
        {
            "body": "NumpadClear",
            "prefix": "NumpadClear"
        },
        {
            "body": "NumpadDel",
            "prefix": "NumpadDel"
        },
        {
            "body": "NumpadDiv",
            "prefix": "NumpadDiv"
        },
        {
            "body": "NumpadDot",
            "prefix": "NumpadDot"
        },
        {
            "body": "NumpadDown",
            "prefix": "NumpadDown"
        },
        {
            "body": "NumpadEnd",
            "prefix": "NumpadEnd"
        },
        {
            "body": "NumpadEnter",
            "prefix": "NumpadEnter"
        },
        {
            "body": "NumpadHome",
            "prefix": "NumpadHome"
        },
        {
            "body": "NumpadIns",
            "prefix": "NumpadIns"
        },
        {
            "body": "NumpadLeft",
            "prefix": "NumpadLeft"
        },
        {
            "body": "NumpadMult",
            "prefix": "NumpadMult"
        },
        {
            "body": "NumpadPgdn",
            "prefix": "NumpadPgdn"
        },
        {
            "body": "NumpadPgup",
            "prefix": "NumpadPgup"
        },
        {
            "body": "NumpadRight",
            "prefix": "NumpadRight"
        },
        {
            "body": "NumpadSub",
            "prefix": "NumpadSub"
        },
        {
            "body": "NumpadUp",
            "prefix": "NumpadUp"
        },
        {
            "body": "PgDn",
            "prefix": "PgDn"
        },
        {
            "body": "PgUp",
            "prefix": "PgUp"
        },
        {
            "body": "PrintScreen",
            "prefix": "PrintScreen"
        },
        {
            "body": "RAlt",
            "prefix": "RAlt"
        },
        {
            "body": "RButton",
            "prefix": "RButton"
        },
        {
            "body": "RControl",
            "prefix": "RControl"
        },
        {
            "body": "RCtrl",
            "prefix": "RCtrl"
        },
        {
            "body": "Right",
            "prefix": "Right"
        },
        {
            "body": "RShift",
            "prefix": "RShift"
        },
        {
            "body": "RWin",
            "prefix": "RWin"
        },
        {
            "body": "ScrollLock",
            "prefix": "ScrollLock"
        },
        {
            "body": "Shift",
            "prefix": "Shift"
        },
        {
            "body": "ShiftAltTab",
            "prefix": "ShiftAltTab"
        },
        {
            "body": "Space",
            "prefix": "Space"
        },
        {
            "body": "Tab",
            "prefix": "Tab"
        },
        {
            "body": "Up",
            "prefix": "Up"
        },
        {
            "body": "Volume_Down",
            "prefix": "Volume_Down"
        },
        {
            "body": "Volume_Mute",
            "prefix": "Volume_Mute"
        },
        {
            "body": "Volume_Up",
            "prefix": "Volume_Up"
        },
        {
            "body": "WheelDown",
            "prefix": "WheelDown"
        },
        {
            "body": "WheelLeft",
            "prefix": "WheelLeft"
        },
        {
            "body": "WheelRight",
            "prefix": "WheelRight"
        },
        {
            "body": "WheelUp",
            "prefix": "WheelUp"
        },
        {
            "body": "XButton1",
            "prefix": "XButton1"
        },
        {
            "body": "XButton2",
            "prefix": "XButton2"
        }
    ]
}
